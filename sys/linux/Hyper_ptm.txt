include <linux/fcntl.h>
include <linux/ioctl.h>

resource fdptm[int32]: -1
open$IOCTL_PRIVCMD_HYPERCALLptm(file ptr[in, string["/proc/xen/privcmd"]]) fdptm

ioctl$IOCTL_PRIVCMD_HYPERCALLptm0(fd fdptm, ioctl_privcmd_hypecall0 const[0x305000], hypercall ptr[in, my_hypercallptm0])
ioctl$IOCTL_PRIVCMD_HYPERCALLptm1(fd fdptm, ioctl_privcmd_hypecall0 const[0x305000], hypercall ptr[in, my_hypercallptm1])
ioctl$IOCTL_PRIVCMD_HYPERCALLptm2(fd fdptm, ioctl_privcmd_hypecall0 const[0x305000], hypercall ptr[in, my_hypercallptm2])
ioctl$IOCTL_PRIVCMD_HYPERCALLptm3(fd fdptm, ioctl_privcmd_hypecall0 const[0x305000], hypercall ptr[in, my_hypercallptm3])
ioctl$IOCTL_PRIVCMD_HYPERCALLptm4(fd fdptm, ioctl_privcmd_hypecall0 const[0x305000], hypercall ptr[in, my_hypercallptm4])

close$IOCTL_PRIVCMD_HYPERCALLptm(fd fdptm)

my_hypercallptm0 {
	__HYPERVISOR_hypercall_type	const[4, int64]
	args				array[int64, 5]
}

my_hypercallptm1 {
	__HYPERVISOR_hypercall_type	const[0, int64]
	args				array[int64, 5]
}

my_hypercallptm2 {
	__HYPERVISOR_hypercall_type	const[15, int64]
	args				array[int64, 5]
}

my_hypercallptm3 {
	__HYPERVISOR_hypercall_type	const[29, int64]
	args				array[int64, 5]
}

my_hypercallptm4 {
	__HYPERVISOR_hypercall_type	const[1, int64]
	args				array[int64, 5]
}

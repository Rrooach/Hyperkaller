include <linux/fcntl.h>
include <linux/ioctl.h>
define PRIVCMD_HYPERCALL_SIZE	sizeof(struct {u64 op; u64 arg[5]; u64 retvl;})
define IOCTL_PRIVCMD_HYPERCALL0	_IOC(0, 'P', 0, PRIVCMD_HYPERCALL_SIZE)
#define IOCTL_PRIVCMD_HYPERCALL _IOWR('E', 0, struct {u64 op; u64 arg[5]; u64 retvl;}) 

open$IOCTL_PRIVCMD_HYPERCALL5(file ptr[in, string["/proc/xen/privcmd"]]) fd

ioctl$IOCTL_PRIVCMD_HYPERCALL20(fd fd, cmd const[IOCTL_PRIVCMD_HYPERCALL0], hypercall ptr[in, my_hypercall20])
ioctl$IOCTL_PRIVCMD_HYPERCALL21(fd fd, cmd const[IOCTL_PRIVCMD_HYPERCALL0], hypercall ptr[in, my_hypercall21])
ioctl$IOCTL_PRIVCMD_HYPERCALL22(fd fd, cmd const[IOCTL_PRIVCMD_HYPERCALL0], hypercall ptr[in, my_hypercall20])
ioctl$IOCTL_PRIVCMD_HYPERCALL23(fd fd, cmd const[IOCTL_PRIVCMD_HYPERCALL0], hypercall ptr[in, my_hypercall21])
ioctl$IOCTL_PRIVCMD_HYPERCALL24(fd fd, cmd const[IOCTL_PRIVCMD_HYPERCALL0], hypercall ptr[in, my_hypercall20])

close$IOCTL_PRIVCMD_HYPERCALL5(fd fd)

my_hypercall20 {
	__HYPERVISOR_hypercall_type	int32[0:55]
	arg1				int64
	arg2				int64
	arg3				int64
	arg4				int64
	arg5				int64
}

my_hypercall21 {
	__HYPERVISOR_hypercall_type	int32[0:55]
	arg1				int64
	arg2				int64
	arg3				int64
	arg4				int64
	arg5				int64
}

my_hypercall22 {
	__HYPERVISOR_hypercall_type	int32[0:55]
	arg1				int64
	arg2				int64
	arg3				int64
	arg4				int64
	arg5				int64
}


my_hypercall23 {
	__HYPERVISOR_hypercall_type	int32[0:55]
	arg1				int64
	arg2				int64
	arg3				int64
	arg4				int64
	arg5				int64
}

my_hypercall24 {
	__HYPERVISOR_hypercall_type	int32[0:55]
	arg1				int64
	arg2				int64
	arg3				int64
	arg4				int64
	arg5				int64
}


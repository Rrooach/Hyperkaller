include <linux/fcntl.h>
include <linux/ioctl.h>
define PRIVCMD_HYPERCALL_SIZE	sizeof(struct {u64 op; u64 arg[5]; u64 retvl;})
define IOCTL_PRIVCMD_HYPERCALL0	_IOC(0, 'P', 0, PRIVCMD_HYPERCALL_SIZE)
#define IOCTL_PRIVCMD_HYPERCALL _IOWR('E', 0, struct {u64 op; u64 arg[5]; u64 retvl;}) 

open$IOCTL_PRIVCMD_HYPERCALL_net(dev ptr[in, string["/proc/xen/privcmd"]]) fd
#open(file ptr[in, string["/proc/xen/privcmd"]], flags flags[open_flags], mode flags[open_mode]) fd
ioctl$IOCTL_PRIVCMD_HYPERCALL_net0(fd fd, cmd const[IOCTL_PRIVCMD_HYPERCALL0], hypercall ptr[in, my_hypercall_net0])
ioctl$IOCTL_PRIVCMD_HYPERCALL_net1(fd fd, cmd const[IOCTL_PRIVCMD_HYPERCALL0], hypercall ptr[in, my_hypercall_net1])
ioctl$IOCTL_PRIVCMD_HYPERCALL_net2(fd fd, cmd const[IOCTL_PRIVCMD_HYPERCALL0], hypercall ptr[in, my_hypercall_net2])
ioctl$IOCTL_PRIVCMD_HYPERCALL_net3(fd fd, cmd const[IOCTL_PRIVCMD_HYPERCALL0], hypercall ptr[in, my_hypercall_net3])
close$IOCTL_PRIVCMD_HYPERCALL_net(fd fd)

my_hypercall_net0 {
	__HYPERVISOR_hypercall_type	const[4, int64]
	arg1				int64
	arg2				int64
	arg3				int64
	arg4				int64
	arg5				int64
}

my_hypercall_net1 {
	__HYPERVISOR_hypercall_type	const[32, int64]
	arg1				int64
	arg2				int64
	arg3				int64
	arg4				int64
	arg5				int64
}

my_hypercall_net2 {
	__HYPERVISOR_hypercall_type	const[10, int64]
	arg1				int64
	arg2				int64
	arg3				int64
	arg4				int64
	arg5				int64
}

my_hypercall_net3 {
	__HYPERVISOR_hypercall_type	const[22, int64]
	arg1				int64
	arg2				int64
	arg3				int64
	arg4				int64
	arg5				int64
}

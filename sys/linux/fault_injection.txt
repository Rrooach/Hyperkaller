include <linux/fcntl.h>
include <linux/ioctl.h>
define IOCTL_PRIVCMD_HYPERCALL11000	0x305000
resource fdr[int32]: -1

open$IOCTL_PRIVCMD_HYPERCALL_FINJ(file ptr[in, string["/proc/xen/privcmd"]]) fdr

ioctl$my_hypercall_fs1(fd fdr, ioctl_privcmd_hypecall0 const[0x305000], hypercall ptr[in, my_hypercall_fs1])

ioctl$my_hypercall_fs2(fd fdr, ioctl_privcmd_hypecall0 const[0x305000], hypercall ptr[in, my_hypercall_fs2])

ioctl$my_hypercall_get_trace(fd fdr, ioctl_privcmd_hypecall0 const[0x305000], hypercall ptr[in, my_hypercall_get_trace])

ioctl$my_hypercall_get_site(fd fdr, ioctl_privcmd_hypecall0 const[0x305000], hypercall ptr[in, my_hypercall_get_site])

close$IOCTL_PRIVCMD_HYPERCALL_FINJ(fd fdr)

my_hypercall_fs1 {
	__HYPERVISOR_hypercall_type	const[42, int64]
	arg1				const[-1, int64]
	arg2				int64
	arg3				int64
	arg4				int64
	arg5				int64
}

my_hypercall_fs2 {
	__HYPERVISOR_hypercall_type	const[42, int64]
	arg1				const[-12, int64]
	arg2				int64
	arg3				int64
	arg4				int64
	arg5				int64
}

my_hypercall_get_trace {
	__HYPERVISOR_hypercall_type	const[43, int64]
	arg1				int64
	arg2				int64
	arg3				int64
	arg4				int64
	arg5				int64
}

my_hypercall_get_site {
	__HYPERVISOR_hypercall_type	const[44, int64]
	arg1				int64
	arg2				int64
	arg3				int64
	arg4				int64
	arg5				int64
}

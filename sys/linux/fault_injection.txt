include <linux/fcntl.h>
include <linux/ioctl.h>
define PRIVCMD_HYPERCALL_SIZE	sizeof(struct {u64 op; u64 arg[5]; u64 retvl;})
define IOCTL_PRIVCMD_HYPERCALL0	_IOC(0, 'P', 0, PRIVCMD_HYPERCALL_SIZE)

open$IOCTL_PRIVCMD_HYPERCALL_FINJ(file ptr[in, string["/proc/xen/privcmd"]]) fd

ioctl$my_hypercall_fs1(fd fd, cmd const[IOCTL_PRIVCMD_HYPERCALL0], hypercall ptr[in, my_hypercall_fs1])

ioctl$my_hypercall_fs2(fd fd, cmd const[IOCTL_PRIVCMD_HYPERCALL0], hypercall ptr[in, my_hypercall_fs2])

ioctl$my_hypercall_get_trace(fd fd, cmd const[IOCTL_PRIVCMD_HYPERCALL0], hypercall ptr[in, my_hypercall_get_trace])

ioctl$my_hypercall_get_site(fd fd, cmd const[IOCTL_PRIVCMD_HYPERCALL0], hypercall ptr[in, my_hypercall_get_site])

close$IOCTL_PRIVCMD_HYPERCALL_FINJ(fd fd)

my_hypercall_fs1 {
	__HYPERVISOR_hypercall_type	const[42, int64]
	arg1				const[-1, int64]
	arg2				int64
	arg3				int64
	arg4				int64
	arg5				int64
}

my_hypercall_fs2 {
	__HYPERVISOR_hypercall_type	const[42, int64]
	arg1				const[-12, int64]
	arg2				int64
	arg3				int64
	arg4				int64
	arg5				int64
}

my_hypercall_get_trace {
	__HYPERVISOR_hypercall_type	const[43, int64]
	arg1				int64
	arg2				int64
	arg3				int64
	arg4				int64
	arg5				int64
}

my_hypercall_get_site {
	__HYPERVISOR_hypercall_type	const[44, int64]
	arg1				int64
	arg2				int64
	arg3				int64
	arg4				int64
	arg5				int64
}
